workspace(name = "e2e_core")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "rules_nodejs",
    sha256 = "0e92c638f4c6783517d20df2c742671c1a151c37ad3f47c3fa90e4fd6d90bbd2",
    urls = ["https://github.com/bazelbuild/rules_nodejs/releases/download/4.4.1/rules_nodejs-core-4.4.1.tar.gz"],
)

load("@rules_nodejs//nodejs:repositories.bzl", "nodejs_register_toolchains", "rules_nodejs_dependencies")
load("npm_import.bzl", "npm_import")
load("translate_package_lock.bzl", "translate_package_lock")

# This just gives us bazel-skylib
rules_nodejs_dependencies()

# Get the nodejs toolchain (the node interpreter binary for host and/or target platform)
nodejs_register_toolchains(
    name = "node16",
    node_version = "16.9.0",
)

# Manually import a package using explicit coordinates
npm_import(
    integrity = "sha512-ULr0LDaEqQrMFGyQ3bhJkLsbtrQ8QibAseGZeaSUiT/6zb9IvIkomWHJIvgvwad+hinRAgsI51JcWk2yvwyL+w==",
    package = "acorn",
    version = "8.4.0",
    deps = [],
)

# Read the package-lock.json file to automate creation of remaining npm_import rules
translate_package_lock(
    name = "npm_deps",
    package_lock = "//:package-lock.json",
)

# This is the result of translate_package_lock
load("@npm_deps//:repositories.bzl", "npm_repositories")

# Declare remaining npm_import rules
npm_repositories()
